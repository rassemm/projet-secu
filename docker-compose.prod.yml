services:
  db:
    image: postgres:17-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=vulnerability_scanner
    ports:
      - "5432:5432"
    networks:
      - scanner_network

  redis:
    image: redis:7.4-alpine
    restart: always
    ports:
      - "6379:6379"
    command: redis-server
    networks:
      - scanner_network

  scanner:
    build: 
      context: .
      dockerfile: Dockerfile
    command: ["waitress-serve", "--host=0.0.0.0", "--port=5000", "server:app"]
    #command: ["flask", "run", "--host=0.0.0.0", "--port=5000"]
    restart: always
    ports:
      - "5000:5000"
    depends_on:
      - db
      - redis
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app
    volumes:
      - ./vulnerabilities:/app/vulnerabilities
    networks:
      - scanner_network

  worker:
    build: 
      context: .
      dockerfile: Dockerfile
    command: ["rq", "worker", "scan_tasks", "--with-scheduler"]
    depends_on:
      - db
      - redis
    env_file:
      - .env
    volumes:
      - ./vulnerabilities:/app/vulnerabilities
    networks:
      - scanner_network

networks:
  scanner_network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.host_binding_ipv4: "0.0.0.0"
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16