from bs4 import BeautifulSoup
from base_module import BaseModule
import requests
import urllib.parse

class Module(BaseModule):
    def run(self, context):
        """
        Détecte les listings de répertoires exposés
        """
        base_url = context.get('url', context.get('target'))
        module_results = context.setdefault('module_results', [])
        directory_results = {
            'exposed_directories': [],
            'exposed_files': []
        }

        if not base_url:
            module_results.append({
                'Directory Listing Analysis': {
                    'error': 'Aucune URL de base fournie'
                }
            })
            return context

        try:
            response = requests.get(base_url, allow_redirects=False)
            is_directory_listing = False

            # Vérification des indicateurs de listing
            if 'Index of' in response.text or 'directory listing' in response.text.lower():
                is_directory_listing = True
                directory_results['exposed_directories'].append({
                    'url': base_url,
                    'status_code': response.status_code
                })

                # Analyse des fichiers exposés
                soup = BeautifulSoup(response.text, 'html.parser')
                links = soup.find_all('a')
                
                for link in links:
                    href = link.get('href')
                    if href and not href.startswith('/'):
                        full_url = urllib.parse.urljoin(base_url, href)
                        directory_results['exposed_files'].append({
                            'url': full_url,
                            'filename': href
                        })

            # Ajout des résultats au context
            module_results.append({
                'Directory Listing Analysis': {
                    'url': base_url,
                    'vulnerable': is_directory_listing,
                    'status': 'completed',
                    'findings': directory_results,
                    'total_exposed_files': len(directory_results['exposed_files']),
                    'recommendation': 'Désactiver le listing des répertoires sur le serveur web' if is_directory_listing else None
                }
            })

        except requests.exceptions.RequestException as e:
            module_results.append({
                'Directory Listing Analysis': {
                    'url': base_url,
                    'status': 'error',
                    'error_message': str(e)
                }
            })

        return context
